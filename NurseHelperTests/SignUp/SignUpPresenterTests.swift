//
//  SignUpPresenterTests.swift
//  NurseHelper
//
//  Created by Vyacheslav Okulov on 1/31/17.
//  Copyright (c) 2017 Vyacheslav Okulov. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

@testable import NurseHelper
import XCTest

class SignUpPresenterTests: XCTestCase {
  // MARK: - Subject under test
  
  var sut: SignUpPresenter!
  var spy:OutputSpy!

  // MARK: - Test lifecycle
  
  override func setUp() {
    super.setUp()
    setupSignUpPresenter()
    spy = OutputSpy()
  }
  
  override func tearDown() {
    super.tearDown()
  }
  
  // MARK: - Test setup
  
  func setupSignUpPresenter() {
    sut = SignUpPresenter()
  }
  
  // MARK: - Test doubles
 
  class OutputSpy : SignUpPresenterOutput {
    var displayErrorMessageWasCalled = false
    var displayNextPageWasCalled = false
    var viewModel:SignUp.ViewModel!
    
    func displayErrorMessage(viewModel: SignUp.ViewModel) {
      displayErrorMessageWasCalled = true
      self.viewModel = viewModel
    }
    
    func displayPageAfterSignUp() {
      displayNextPageWasCalled = true
    }

  }
  
  // MARK: - Tests
  
  func testThatErrorResponseCallsDisplayErrorMethodOnOutput() {
    let errorResponse = SignUp.Response(success: false, resultMessage: "Response Error")
    sut.output = spy
    sut.presentErrorMessage(response: errorResponse)
    
    XCTAssertTrue(spy.displayErrorMessageWasCalled)
  }
  
  func testThatErrorResponseReturnsMessageInViewModel() {
    let errorResponse = SignUp.Response(success: false, resultMessage: "Response Error")
    sut.output = spy
    sut.presentErrorMessage(response: errorResponse)
    
    XCTAssertTrue(spy.viewModel.messageToShow == "Response Error")
  }
  
  func testThatSuccessResponseCallsShowNextPageMethod() {
    sut.output = spy
    sut.presentPageAfterSignUp()
    
    XCTAssertTrue(spy.displayNextPageWasCalled)
  }
 
}
