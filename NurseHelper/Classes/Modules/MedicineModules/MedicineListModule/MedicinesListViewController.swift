//
//  MedicinesListViewController.swift
//  NurseHelper
//
//  Created by Vyacheslav Okulov on 2/2/17.
//  Copyright (c) 2017 Vyacheslav Okulov. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol MedicinesListViewControllerInput {
  func displayAllItems(viewModel: MedicinesList.ViewModel)
}

protocol MedicinesListViewControllerOutput {
  func loadAllMedicines()
}

class MedicinesListViewController: UIViewController, MedicinesListViewControllerInput {
  var output: MedicinesListViewControllerOutput!
  var router: MedicinesListRouter!
  
  fileprivate var itemsToShow:[MedicinesList.MedicineShowItem]?
  @IBOutlet weak var tableView: UITableView!
  // MARK: - Object lifecycle
  
  override func awakeFromNib() {
    super.awakeFromNib()
    MedicinesListConfigurator.sharedInstance.configure(viewController: self)
  }
  
  // MARK: - View lifecycle
  
  override func viewDidLoad() {
    super.viewDidLoad()
    setupTableView()
  }
  
  override func viewWillAppear(_ animated: Bool) {
    super.viewWillAppear(animated)
    output.loadAllMedicines()
  }
  
  // MARK: - Event handling
  @IBAction func addNewMedicine(_ sender: Any) {
    router.navigateToAddNewMedicine()
  }

  
  // MARK: - Display logic
  
  func displayAllItems(viewModel: MedicinesList.ViewModel) {
    // NOTE: Display the result from the Presenter
    itemsToShow = viewModel.items
    tableView.reloadData()
  }
}

private extension MedicinesListViewController {
  func setupTableView() {
    tableView.register(UINib(nibName: "MedicineListTableViewCell", bundle: nil), forCellReuseIdentifier: "MedicineListTableViewCell")
  }
}

extension MedicinesListViewController : UITableViewDataSource {
  func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
    return itemsToShow?.count ?? 0
  }
  
  func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
    let cell = tableView.dequeueReusableCell(withIdentifier: "MedicineListTableViewCell", for: indexPath) as! MedicineListTableViewCell
    
    if let item = itemsToShow?[indexPath.row] {
      cell.configureCell(showItem: item)
    }
    
    return cell
  }
}

extension MedicinesListViewController : UITableViewDelegate {
  
}
